// SHARLENNE AZUAJE 1D
// PRIMER PARCIAL

#define LED_A 13
#define LED_B 12
#define LED_C A5
#define LED_D A4
#define LED_E A3
#define LED_F 11
#define LED_G 10


#define BOTON_SUBIR 2
#define BOTON_BAJAR 3
#define BOTON_PAUSAR 4

#define LED_ROJO 9
#define LED_VERDE 8
#define LED_AZUL 7

#define DETENIDO 0
#define SUBIENDO 1
#define BAJANDO 2


#include <Servo.h>
Servo myservo1;
#define SERVO1 6


#define SLUZAMBIENTAL A2 

#define SINCLINACION A1

//Variables gloables
int piso_actual;
int lectura_subir;
int lectura_bajar;
int lectura_pausar;
int habilitacion;
int estadoMontacargas;
int valorSensorLuz;
int valorInclinacion;


//Si la variable vale 0 -> sistema pausado
//Si la variable vale 1 -> Sistema subiendo
//Si la variable vale 2 -> Sistema bajando

//PROTOTIPOS
void PrenderLuzRoja();
void PrenderLuzVerde();
void MostrarNumeroPorDisplay(int piso);
void IncrementarPiso();
void DecrementarPiso();
void Demora();

void MoverServo90();
void MoverServo180();
void EvaluarDiaNocheInclinacion();


void setup(){
  Serial.begin(9600);
  
  
  pinMode(LED_A, OUTPUT);
  pinMode(LED_B, OUTPUT);
  pinMode(LED_C, OUTPUT);
  pinMode(LED_D, OUTPUT);
  pinMode(LED_E, OUTPUT);
  pinMode(LED_F, OUTPUT);
  pinMode(LED_G, OUTPUT);
  
  
  pinMode(BOTON_SUBIR, INPUT);
  pinMode(BOTON_BAJAR, INPUT); 
  pinMode(BOTON_PAUSAR,INPUT);  
  
  
  pinMode(LED_ROJO, OUTPUT);
  pinMode(LED_VERDE, OUTPUT);
  pinMode(LED_AZUL, OUTPUT);
  
  
  piso_actual = 0;
  estadoMontacargas=DETENIDO;
  Serial.println("Usted se encuentra en piso: ");  
  Serial.println(piso_actual);
  Serial.println("Servo en 90");
  
  
  myservo1.attach(SERVO1, 500, 2500);
  //myservo1.write(0);
  
  pinMode(SINCLINACION, INPUT);
 
}

void loop(){ 
  
  MostrarNumeroPorDisplay(piso_actual);
  
  if(estadoMontacargas == DETENIDO){ 
        PrenderLuzRoja();
    
        MoverServo90();
    
        EvaluarDiaNocheInclinacion();
    
        lectura_bajar=digitalRead(BOTON_BAJAR);
        lectura_subir=digitalRead(BOTON_SUBIR);
        
        if(lectura_bajar == HIGH || lectura_subir == HIGH){
                if(lectura_subir==HIGH){
                    if(piso_actual < 9){
                      	Serial.println("SUBIENDO...");
                        estadoMontacargas=SUBIENDO;
                    }
                }
                
                if(lectura_bajar==HIGH){ 
                    if(piso_actual > 0){
                        Serial.println("BAJANDO...");
                        estadoMontacargas=BAJANDO;
                    }
                }
        }
  }
  else{ //Está subiendo o bajando
    PrenderLuzVerde();
    
    MoverServo180();
    
    EvaluarDiaNocheInclinacion();
    
    if(estadoMontacargas == SUBIENDO){
            if(piso_actual < 9){
              	Demora();
              	if(habilitacion==1){
                 	IncrementarPiso();
                  	Serial.println("Usted se encuentra en piso: ");  
  					Serial.println(piso_actual);
                    Serial.println("Servo en 180");
              	}
              	else{
                	estadoMontacargas=DETENIDO;
                  	Serial.println("SISTEMA PAUSADO");
                    Serial.println("Servo en 90");
              	}
            }
            else{
                estadoMontacargas=DETENIDO;
            }
    }
    else{ //si estadoMontacargas = bajando
            if(piso_actual > 0){
              	Demora();
              	if(habilitacion==1){
                 	DecrementarPiso();
                  	Serial.println("Usted se encuentra en piso: ");  
  					Serial.println(piso_actual);
                    Serial.println("Servo en 180");
              	}
              	else{
                	estadoMontacargas=DETENIDO;
                  	Serial.println("SISTEMA PAUSADO");
                    Serial.println("Servo en 90");
              	}
            }
            else{
                estadoMontacargas = DETENIDO;
            }
        
    }
  } 
}


//DESARROLLO

/*
Esta función mueve el servo a 90 grados
*/
void MoverServo90()
{
  myservo1.write(90);
}

/*
Esta función mueve el servo a 180 grados
*/
void MoverServo180()
{
  myservo1.write(180);
}

/*
Esta función evalúa si es de día o de noche y la inclinación del sensor,
en caso de ser de noche y no estar inclinado, el led azul se encenderá,
caso contrario no lo hará
*/
void EvaluarDiaNocheInclinacion()
{
  valorSensorLuz = analogRead(SLUZAMBIENTAL);
  valorInclinacion = analogRead(SINCLINACION);
  Serial.println(valorInclinacion);
    if(valorSensorLuz > 20 && valorInclinacion == 1023)
    {
      digitalWrite(LED_AZUL, HIGH);
    }
    else
    {
      digitalWrite(LED_AZUL, LOW);
    }
  
}

/*
Esta función incrementa en 1 a la variable global piso_actual
*/
void IncrementarPiso(){
    piso_actual++;
}


/*
Esta función decrementa en 1 a la variable global piso_actual
*/
void DecrementarPiso(){
    piso_actual--;
}


/*
Esta función permite identificar el momento en el que el 
usuario decide pausar el sistema
*/
void Demora(void){
    habilitacion=1;
    for(int i=0;i<30;i++){
        delay(100);
        lectura_pausar=digitalRead(BOTON_PAUSAR);
        if(lectura_pausar==HIGH){
            habilitacion=0;
            break;
        }
    }
}


/*
Esta función muestra por el display el número correspondiente
al número que se le pasa como parámetro
*/
void MostrarNumeroPorDisplay(int piso){
   switch(piso)
   {
	case 0:
        digitalWrite(LED_A, HIGH);      
        digitalWrite(LED_B, HIGH); 
        digitalWrite(LED_C, HIGH);
        digitalWrite(LED_D, HIGH);
        digitalWrite(LED_E, HIGH);
        digitalWrite(LED_F, HIGH);
        digitalWrite(LED_G, LOW); 
	    break;
    case 1:
        digitalWrite(LED_A, LOW);      
        digitalWrite(LED_B, HIGH); 
        digitalWrite(LED_C, HIGH);
        digitalWrite(LED_D, LOW);
        digitalWrite(LED_E, LOW);
        digitalWrite(LED_F, LOW);
        digitalWrite(LED_G, LOW); 
	    break;
    case 2:
 	    digitalWrite(LED_A, HIGH);      
        digitalWrite(LED_B, HIGH); 
        digitalWrite(LED_C, LOW);
        digitalWrite(LED_D, HIGH);
        digitalWrite(LED_E, HIGH);
        digitalWrite(LED_F, LOW);
        digitalWrite(LED_G, HIGH); 
        break;
	case 3: 
	    digitalWrite(LED_A, HIGH);      
        digitalWrite(LED_B, HIGH); 
        digitalWrite(LED_C, HIGH);
        digitalWrite(LED_D, HIGH);
        digitalWrite(LED_E, LOW);
        digitalWrite(LED_F, LOW);
        digitalWrite(LED_G, HIGH); 
	  break;
	case 4:
        digitalWrite(LED_A, LOW);      
        digitalWrite(LED_B, HIGH); 
        digitalWrite(LED_C, HIGH);
        digitalWrite(LED_D, LOW);
        digitalWrite(LED_E, LOW);
        digitalWrite(LED_F, HIGH);
        digitalWrite(LED_G, HIGH); 
        break;
    case 5:
	    digitalWrite(LED_A, HIGH);      
        digitalWrite(LED_B, LOW); 
        digitalWrite(LED_C, HIGH);
        digitalWrite(LED_D, HIGH);
        digitalWrite(LED_E, LOW);
        digitalWrite(LED_F, HIGH);
        digitalWrite(LED_G, HIGH); 
	  break;
	case 6:
	    digitalWrite(LED_A, HIGH);      
        digitalWrite(LED_B, LOW); 
        digitalWrite(LED_C, HIGH);
        digitalWrite(LED_D, HIGH);
        digitalWrite(LED_E, HIGH);
        digitalWrite(LED_F, HIGH);
        digitalWrite(LED_G, HIGH); 
     	break;
	case 7:
	    digitalWrite(LED_A, HIGH);      
        digitalWrite(LED_B, HIGH); 
        digitalWrite(LED_C, HIGH);
        digitalWrite(LED_D, LOW);
        digitalWrite(LED_E, LOW);
        digitalWrite(LED_F, LOW);
        digitalWrite(LED_G, LOW); 
	  break;
	case 8:
	    digitalWrite(LED_A, HIGH);      
        digitalWrite(LED_B, HIGH); 
        digitalWrite(LED_C, HIGH);
        digitalWrite(LED_D, HIGH);
        digitalWrite(LED_E, HIGH);
        digitalWrite(LED_F, HIGH);
        digitalWrite(LED_G, HIGH); 
        break;
    case 9:
	    digitalWrite(LED_A, HIGH);      
        digitalWrite(LED_B, HIGH); 
        digitalWrite(LED_C, HIGH);
        digitalWrite(LED_D, LOW);
        digitalWrite(LED_E, LOW);
        digitalWrite(LED_F, HIGH);
        digitalWrite(LED_G, HIGH); 
        break;
    }
}


/*
Esta función prende el led verde y apaga el led rojo
*/
void PrenderLuzVerde(){
       digitalWrite(LED_VERDE, HIGH);
       digitalWrite(LED_ROJO, LOW);
}

/*
Esta función apaga el led verde y prende el led rojo
*/
void PrenderLuzRoja(){
       digitalWrite(LED_VERDE, LOW);
       digitalWrite(LED_ROJO, HIGH);
}

